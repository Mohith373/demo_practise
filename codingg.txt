1)git init or git init -b main (this is to change branch name)
2)next git add . or git add filename to stagin area  
3)commit using any commit message git commit -m "commmiting message"
4)after commiting do git log to see commit history(within time and date particularly)
5)one imp thing to observe
--------->when ever you change the any simple code or even one alphabet you have to move from begginigng again you have to move files to staging area and again commit once see git log and status
6)git diff command will displays the changes made by the file after adding new data only when before in stagin area that is not staged 
7)git diff works only when not in staging area i.e changing code and not do to staging area 
8)git diff --staged used to 
9)removing git file--> when you try to delte a file in this working directory you can delete but it cant removed  from your git when you check status it shows as deleted so use command only to remove or delte files in your project 
it means first untrack your file using git rm --cached filename and then you willl be able to delte directly from files in projrxt or folder 
cloning a folder or project from github-->
git clone <paste the url of that project>

echo "# demo_practise" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Mohith373/demo_practise.git
git push -u origin main
follow the above steps to push your code from local machine to remote machine in your terminal using mkdir and cd to that directory

echo used to create a readme file with data inside double quotes 
cat readme shows data inside readme file cat is a command
ls shows all files
ls -a shows all .git including all 


git remote add origin url of your github repo-->this is used to install remote to our github repository

git remote -v used to check where remote exists ....